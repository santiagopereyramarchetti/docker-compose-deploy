version: "3.8"
services:
  proxy:
    build:
      context: .
      dockerfile: ./docker/proxy/Dockerfile.proxy
      target: prod
      x-bake:
        platforms:
          - linux/amd64
          - linux/arm64
    image: santiagopereyramarchetti/proxy-doc-compo:1.0
    container_name: proxy
    restart: unless-stopped
    ports:
      - "3000:80"
      - "3001:443"
    volumes:
      - ./docker/proxy/config/proxy.dev.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - nginx
  
  frontend:
    build:
      context: .
      dockerfile: ./docker/vue/Dockerfile.vue
      target: prod
      x-bake:
        platforms:
          - linux/amd64
          - linux/arm64
    image: santiagopereyramarchetti/frontend-doc-compo:1.0
    container_name: frontend
    restart: unless-stopped
    volumes:
      - ./frontend/public:/var/www/public
      - ./frontend/src:/var/www/src
      - ./frontend/package.json:/var/www/package.json
      - ./frontend/package-lock.json:/var/www/package-lock.json

  nginx:
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile.nginx
      x-bake:
        platforms:
          - linux/amd64
          - linux/arm64
    image: santiagopereyramarchetti/nginx-doc-compo:1.0
    container_name: nginx
    restart: unless-stopped
    volumes:
      - ./backend/app:/usr/src/app
      - ./backend/config:/usr/src/config 
      - ./backend/database:/usr/src/database 
      - ./backend/routes:/usr/src/routes 
      - ./backend/storage:/usr/src/storage 
      - ./backend/tests:/usr/src/test 
      - ./backend/composer.json:/usr/src/composer.json 
      - ./backend/composer.lock:/usr/src/composer.lock 
      - ./backend/.env:/usr/src/.env
    depends_on:
      - api

  api:
    build:
      context: .
      dockerfile: ./docker/laravel/Dockerfile.laravel
      x-bake:
        platforms:
          - linux/amd64
          - linux/arm64
    image: santiagopereyramarchetti/api-doc-compo:1.0
    container_name: api
    restart: unless-stopped
    volumes:
      - ./backend/app:/usr/src/app
      - ./backend/config:/usr/src/config 
      - ./backend/database:/usr/src/database 
      - ./backend/routes:/usr/src/routes 
      - ./backend/storage:/usr/src/storage 
      - ./backend/tests:/usr/src/test 
      - ./backend/composer.json:/usr/src/composer.json 
      - ./backend/composer.lock:/usr/src/composer.lock 
      - ./backend/.env:/usr/src/.env
    depends_on:
      - mysql
      - redis

  mysql:
    build:
      context: .
      dockerfile: ./docker/mysql/Dockerfile.mysql
      x-bake:
        platforms:
          - linux/amd64
          - linux/arm64
    image: santiagopereyramarchetti/mysql-doc-compo:1.0
    container_name: mysql
    restart: unless-stopped
    volumes:
      - ./mysqldata:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: password

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    volumes:
      - ./redisdata:/data

  inicialization:
    build:
      context: .
      dockerfile: ./docker/inicialization/Dockerfile
      x-bake:
        platforms:
          - linux/amd64
          - linux/arm64
    image: santiagopereyramarchetti/init-doc-compo:1.0
    container_name: inicialization
    restart: no
    volumes:
      - ./docker/inicialization/init.sh:/usr/src/init.sh
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      DB_USER: backend
      DB_PASSWORD: password
      MAX_WAIT: 120
      WAIT_INTERVAL: 10
      MYSQL_CONTAINER_NAME: mysql
      API_CONTAINER_NAME: api
      mode: prod
    depends_on:
      - mysql
      - redis
      - api